name: Tests
on: [push, pull_request]

env:
  # Keep this here so jobs can reference if needed
  CI: true

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv (tool, no cache) - create uv.lock
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.7"
          enable-cache: false
      - name: Debug - show repo and python
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -la .
          python -V
          which python || true
          uv --version || true
      - name: Generate uv.lock
        run: |
          uv lock || ( echo "uv lock failed" && exit 1 )
          echo "Produced uv.lock:"
          ls -la uv.lock || true
          sed -n '1,200p' uv.lock || true
      - name: Install uv (tool) with cache dependency (uses uv.lock)
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.7"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Cache pip and wheelhouse
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml','**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Upgrade pip, setuptools, wheel
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install dependencies (uv)
        run: uv sync --group test
      - name: Run tests
        run: uv run python3 -m pytest -q
      - name: Run tests and generate coverage
        run: |
          uv run python3 -m pytest --cov=queuack tests/ --junitxml=junit.xml -o junit_family=legacy --cov-report=xml:coverage.xml

      - name: Upload coverage to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./junit.xml
          fail_ci_if_error: false
