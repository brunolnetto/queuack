name: Release pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish:
        description: 'Set to true to publish to PyPI in a manual run'
        required: false
        default: 'false'

permissions:
  contents: write
  packages: write

jobs:

  generate_and_release:
    name: Generate release notes and create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Generate release notes
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          VERSION=${{ github.ref_name }}
          echo "Generating release notes for $VERSION"
          python3 scripts/generate_release_notes_ai.py --version "$VERSION" --range "$VERSION^..$VERSION"

      - name: Upload release notes artifact for review
        uses: actions/upload-artifact@v5
        with:
          name: release-notes-${{ github.ref_name }}
          path: RELEASE_NOTES_v${{ github.ref_name }}.md

      - name: Create GitHub Release (draft for review)
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          bodyFile: RELEASE_NOTES_v${{ github.ref_name }}.md
          draft: true
          prerelease: false

  publish:
    name: Build and publish to PyPI (manual)
    needs: generate_and_release
    # Only run when manually dispatched with publish=true. Secret presence is checked at runtime
    # Note: referencing secrets in an `if` expression is not allowed by GitHub; avoid doing so.
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build and publish to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          set -euo pipefail
          if [ -z "${PYPI_API_TOKEN:-}" ]; then
            echo "ERROR: PYPI_API_TOKEN secret is not set. Aborting publish." >&2
            exit 1
          fi
          python -m pip install --upgrade build twine
          python -m build
          python -m twine upload -u __token__ -p "$PYPI_API_TOKEN" dist/*
